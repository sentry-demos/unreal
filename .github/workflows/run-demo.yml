name: run-demo

on:
  # schedule:
  #   - cron: '0 */2 * * *' # every two hours
  workflow_dispatch:

jobs:
  run:
    name: Run Demo
    runs-on: windows-latest

    steps:
      - name: Get latest build run
        id: get-run
        run: |
          $runs = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/actions/workflows/ci.yml/runs?status=success&per_page=1" -Headers @{Authorization="Bearer ${{ secrets.GITHUB_TOKEN }}"}
          $runId = $runs.workflow_runs[0].id
          echo "run-id=$runId" >> $env:GITHUB_OUTPUT

      - name: Download SentryTower
        id: download
        uses: actions/download-artifact@v4
        with:
          name: SentryTower
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.get-run.outputs.run-id }}

      - name: Run simulation
        run: |
          $downloadPath = "${{ steps.download.outputs.download-path }}"
          Write-Output "Download path: $downloadPath"
          if (!(Test-Path $downloadPath)) {
            Write-Error "Download path does not exist: $downloadPath"
            exit 1
          }
          
          $exePath = Join-Path $downloadPath "SentryTower.exe"
          if (!(Test-Path $exePath)) {
            Write-Error "SentryTower.exe not found at: $exePath"
            exit 1
          }
          
          Write-Output "Running: $exePath -Unattended -nullrhi --idle"
          $output = & $exePath -Unattended -nullrhi --idle 2>&1
          Write-Output "Game console output:"
          Write-Output $output
          Write-Output "Exit code: $LASTEXITCODE"